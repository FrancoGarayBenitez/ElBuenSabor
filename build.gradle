plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1' // <-- CORRECCIÓN 1: Versión estable
	id 'io.spring.dependency-management' version '1.1.5' // <-- Versión compatible con SB 3.3.1
}

group = 'com.elbuensabor'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'

	// Auth0
	implementation 'com.auth0:auth0-spring-security-api:1.5.3'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'com.auth0:auth0:2.10.0'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5' // runtimeOnly es más seguro
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // runtimeOnly es más seguro

	// Mercado Pago SDK
	implementation 'com.mercadopago:sdk-java:2.1.28'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// --- CORRECCIÓN 2: AÑADIR ESTE BLOQUE COMPLETO ---
// Esto le dice al IDE y a Gradle dónde encontrar el código generado por MapStruct
tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(layout.getBuildDirectory().dir("generated/sources/annotationProcessor/java/main")))
}
